-- 1. Display the number of states present in the LocationTable.
SELECT COUNT(DISTINCT STATE) as 'Total States' FROM [dbo].[Location];

-- 2. How many products are of regular type?
SELECT COUNT(*) as 'Total Regular Product' FROM [dbo].[Product]
WHERE TYPE = 'Regular';

-- 3. How much spending has been done on marketing of product ID 1?
SELECT SUM(Marketing) as 'Marketing Spend' FROM [dbo].[Fact]
WHERE ProductId = 1;

-- 4. What is the minimum sales of a product?
SELECT ProductId,MIN(sales) AS 'Minimum Sales' FROM FACT 
GROUP BY ProductId
ORDER BY ProductId;

-- 5. Display the max Cost of Good Sold (COGS)
SELECT MAX(COGS) as 'Max COGS' FROM [dbo].[Fact]

-- 6. Display the details of the product ID where product type is coffee.
SELECT * FROM [dbo].[Fact] 
WHERE ProductId IN ( 
	SELECT ProductId FROM [dbo].[Product] 
	WHERE ProductType = 'Coffee' 
);

-- 7. Display the details where total expenses are greater than 40.
SELECT * from [dbo].[Fact]
WHERE TotalExpenses > 40;

-- 8. What is the average sales in area code 719?
SELECT AVG(Sales) as 'Average Sales' FROM [dbo].[Fact]
WHERE AreaCode = 719;

-- 9. Find out the total profit generated by Colorado state.
SELECT SUM(Profit) as 'Total Profit' FROM [dbo].[Fact]
WHERE AreaCode IN (
	SELECT AreaCode FROM [dbo].Location
	WHERE State = 'Colorado'
);

-- 10. Display the average inventory for each product ID
SELECT ProductId,AVG(Inventory) as 'Average Inventory' FROM [dbo].[Fact]
GROUP BY ProductId
ORDER BY ProductId;

-- 11. Display state in a sequential order in a LocationTable.
SELECT DISTINCT STATE FROM [dbo].[Location]
ORDER BY STATE ASC;

-- 12. Display the average budget margin where the average budget margin should be greater than 100.
SELECT * FROM [dbo].[Fact]
WHERE BudgetMargin > (
	SELECT AVG(BudgetMargin) FROM [dbo].[Fact]
);

-- 13. What is the total sales done on date 2010-01-01?
SELECT SUM(Sales) as 'Total Sales' FROM [dbo].[Fact]
WHERE Date = '2010-01-01';

-- 14. Display the average total expense of each product ID on an individual date.
SELECT ProductId, Date, AVG(TotalExpenses) AS 'Average Total Expenses' FROM [dbo].[fact]
GROUP BY ProductId, Date
ORDER BY ProductId, Date;

-- 15. Display the table with the following attributes such as date, product ID, product_type, product, sales, profit, state, area_code.
SELECT f.Date, f.ProductId, p.ProductType, p.Product, f.Sales, f.Profit, l.State, l.AreaCode FROM [dbo].[Fact] f
INNER JOIN [dbo].[Product] p ON f.ProductId=p.ProductId
INNER JOIN [dbo].[Location] l ON l.AreaCode = f.AreaCode;

-- 16. Display the rank without any gap to show the sales wise rank.

-- 17. Find the state wise profit and sales.
SELECT l.State,SUM(f.Sales) as 'Sales' ,SUM(f.Profit) as 'Profit' FROM [dbo].[Fact] f
INNER JOIN [dbo].[Location] l ON f.AreaCode = l.AreaCode
GROUP BY l.State; 

-- 18. Find the state wise profit and sales along with the product name.
SELECT l.State,p.Product,SUM(f.Sales) as 'Sales' ,SUM(f.Profit) as 'Profit' FROM [dbo].[Fact] f
INNER JOIN [dbo].[Location] l ON f.AreaCode = l.AreaCode
INNER JOIN [dbo].[Product] p ON p.ProductId = f.ProductId
GROUP BY l.State,p.Product
ORDER BY l.State,p.Product;

-- 19. If there is an increase in sales of 5%, calculate the increased sales.

-- 20. Find the maximum profit along with the product ID and product type.
SELECT p.ProductId,p.ProductType,Max(Profit) as 'Max Profit' FROM [dbo].[Fact] f
INNER JOIN [dbo].[Product] p ON p.ProductId=f.ProductId
GROUP BY p.ProductId,p.ProductType;

-- 22. Write a query by creating a condition in which if the total expenses is less than 60 then it is a profit or else loss.
SELECT "Profit/Loss" = CASE
	WHEN TotalExpenses < 60 THEN 'Profit'
	ELSE 'Loss' 
	END, *
FROM [dbo].[Fact];

-- 23. Give the total weekly sales value with the date and product ID details. Use roll-up to pull the data in hierarchical order
SELECT Date, ProductId, SUM(Sales) as 'Sales' FROM [dbo].[Fact]
GROUP BY Rollup(Date,ProductId);

-- 26. Change the product type from coffee to tea where product ID is 1 and undo it
UPDATE [dbo].[Product]
SET ProductType = 'Tea'
WHERE ProductId = 1;

UPDATE [dbo].[Product]
SET ProductType = 'Coffee'
WHERE ProductId = 1;

-- 27. Display the date, product ID and sales where total expenses are between 100 to 200.
SELECT Date,ProductId,Sales FROM [dbo].[Fact]
WHERE TotalExpenses between 100 and 200;

-- 28. Delete the records in the ProductTable for regular type
--DELETE FROM [dbo].[Product]
--WHERE Type = 'Regular';

-- 29. Display the ASCII value of the fifth character from the column Product.
SELECT ASCII(SubString(Product,5,1)) as ' ASCII Value' FROM [dbo].[Product];
